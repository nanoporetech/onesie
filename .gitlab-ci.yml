stages:
 - docker
 - build
 - deploy

variables:
  KERNEL_RELEASE: "4.4.38-minit"
  UBUNTU_VERSION: "xenial"

.docker-headers:
  when: manual
  stage: docker
  tags:
    - docker-builder-arm
  image: git.oxfordnanolabs.local:4567/traque/ont-docker-base/ont-base-docker:latest
  script:
    - TAG="${CI_REGISTRY_IMAGE}/${CI_JOB_NAME#docker-}"
    - echo "Building ${TAG}"
    - docker build --no-cache --pull -t "${TAG}"
        --build-arg "UBUNTU_VERSION=${UBUNTU_VERSION}"
        --build-arg "HEADERS_PACKAGE_URL=${HEADERS_PACKAGE_URL}"
        -f ./docker/Dockerfile.headers ./docker
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push "${TAG}"

docker-u18.04-k4.9.140:
  extends: .docker-headers
  variables:
    UBUNTU_VERSION: "18.04"
    HEADERS_PACKAGE_URL: "https://git.oxfordnanolabs.local/minit/linux-build-tegra-l4t32/-/jobs/4421405/artifacts/raw/linux-headers-4.9.140-minit_32.4.3-20201126185312_arm64.deb"

.build:
  stage: build
  tags:
    - linux_aarch64
  script:
    - make

build-u18.04-k4.9.140:
  extends: .build
  image: "${CI_REGISTRY_IMAGE}/u18.04-k4.9.140"
  variables:
    KERNELRELEASE: "4.9.140-minit"

compile:
  image: docker-registry.oxfordnanolabs.local:5000/kernel-dev-aarch64
  tags:
    - linux_aarch64
  stage: build
  script:
    - COMPILED_DRIVER_PACKAGE=1 KERNELRELEASE=${KERNEL_RELEASE} make dist-deb
  artifacts:
    paths:
    - ./ont-minion1c-driver-${KERNEL_RELEASE}_*~${UBUNTU_VERSION}_arm64.deb
    - ./ont-minion1c-driver-dev_*~${UBUNTU_VERSION}_all.deb
    - ./ont-minion1c-driver-utils_*~${UBUNTU_VERSION}_arm64.deb
    - ./ont-minion1c-driver_*~${UBUNTU_VERSION}.dsc
    - ./ont-minion1c-driver_*~${UBUNTU_VERSION}.tar.gz

.publish: &publish
  image: docker-registry.oxfordnanolabs.local:5000/ont-base-ubuntu:16.04
  when: manual
  tags:
    - linux
  only:
    - master
    - tags
  dependencies: ["compile"]
  script:
   - for deb in ont-minion1c-driver*.deb; do
   -   arch=$(dpkg --info "${deb}" | grep "Architecture:" | cut -d ":" -f 2 | tr -d "[:space:]")
   -   url="https://artifactory.oxfordnanolabs.local/artifactory/${REPO}/pool/$(basename "${deb}");commitSHA=${CI_COMMIT_SHA};deb.distribution=${UBUNTU_VERSION};deb.component=non-free;deb.architecture=${arch}"
   -   echo "Uploading ${deb} to ${url}"
   - ' curl -LfsS
         --request PUT
         --user "${ARTIFACTORY_USER}:${ARTIFACTORY_PASS}"
         --header "X-Checksum-Sha256: $(sha256sum "${deb}" | cut -d " " -f 1)"
         --header "X-Checksum-Md5: $(md5sum "${deb}" | cut -d " " -f 1)"
         --upload-file "${deb}"
         "${url}"'
   -   echo "Artifact is available at https://artifactory.oxfordnanolabs.local/artifactory/webapp/#/artifacts/browse/tree/General/${REPO}/pool/$(basename "${deb}")"
   - done

publish_unstable:
  <<: *publish
  stage: deploy
  variables:
    REPO: ONTDev-Deb

publish_stable:
  <<: *publish
  stage: deploy
  variables:
    REPO: ONT-Deb

# vim:et:sw=2:sts=2
